#include<iostream>
#include<unordered_map>
using namespace std;
struct trie
{
  unordered_map<char, trie*>children;  
  bool eow;
};
struct trie* get_node()
{
    struct trie* newnode= new trie();
    newnode->eow=false;
    return newnode;
}
void insert(struct trie* root,string str)
{
    struct trie* temp=root;
    for(int i=0;i<str.length();i++)
    {
        char x=str[i];
        if(temp->children.find(x)==temp->children.end())
        temp->children[x]=get_node();
        
        temp=temp->children[x];
    }
    temp->eow=true;
}
bool search(struct trie* root,string str)
{
    if(root==NULL)
    return false;
    
    struct trie* temp=root;
    for(int i=0;i<str.length();i++)
    {
        temp=temp->children[str[i]];
        if(temp==NULL)
        return false;
    }
    return temp->eow;
    
    
}
int main()
{
    struct trie* root= get_node();
    int n;
    string str[100],key;
    long int number[100];
    cout<<"enter the no. of nodes";
    cin>>n;
    cout<<"\nenter the names and phone number";
    for(int i=0;i<n;i++)
    {
        cout<<"\nname";
        cin>>str[i];
        insert(root,str[i]);
        cout<<"\nnumber";
        cin>>number[i];
    }
    cout<<"\ninserted successfully";
    cout<<"\nenter the name to find the phone number";
    cin>>key;
    bool ret=search(root,key);
    if(ret)
    {
        for(int i=0;i<n;i++)
        {
            if(str[i]==key)
            cout<<"\nthe number is  "<<number[i];
        }
    }
    else
    cout<<"\nenter a valid number";
    return 0;
}
