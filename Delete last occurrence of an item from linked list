#include<iostream>
#include<malloc.h>
using namespace std;
struct node
{
	int data;
	struct node* next;
};
struct node* temp=NULL;
void insert(struct node** head,int num)
{
	struct node* newnode=(struct node*)malloc(sizeof(struct node));
	if((*head)==NULL)
	{
		newnode->data=num;
		newnode->next=NULL;
		(*head)=newnode;
		temp=(*head);
	}
	else
	{
		newnode->data=num;
		newnode->next=NULL;
		(*head)->next=newnode;
		(*head)=newnode;
	}
}
void display()
{
	struct node* p=temp;
	while(p!=NULL)
	{
		cout<<p->data<<" -> ";
		p=p->next;
	}
}
void duplicate()
{
	struct node *q,*ptr;
	q=temp;
	ptr=NULL;
	int key;
	cout<<"\nenter the key";
	cin>>key;
	while(q!=NULL)
	{
		if(q->data==key)
		ptr=q;
		q=q->next;
	}
	cout<<"\nfirst done";
	if(ptr!=NULL&&ptr->next==NULL)
	{
		q=temp;
		while(q->next!=ptr)
		{
			cout<<"\nhyyyyyy";
			q=q->next;
		}
		q->next=NULL;
	}
	else
	{
		cout<<"\nhiiiii";
		ptr->data=ptr->next->data;
		ptr->next=ptr->next->next;
		q=NULL;
	}
	
}
int main()
{
	struct node* head=NULL;
	int n,i,a;
	cout<<"enter the number of elements";
	cin>>n;
	cout<<"\nenter the elements";
	for(i=0;i<n;i++)
	{
		cin>>a;
		insert(&head,a);
	}
	cout<<"\ninserted successfuly\n";
	display();
	duplicate();
	display();
	return 0;
}
