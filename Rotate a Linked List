#include<iostream>
#include<malloc.h>
using namespace std;
struct node
{
	int data;
	struct node* next;
};
struct node* temp;
void insert(struct node**head,int n)
{
	struct node* newnode=(struct node*)malloc(sizeof(struct node));
	if((*head)==NULL)
	{
		newnode->data=n;
		newnode->next=NULL;
		(*head)=newnode;
		temp=(*head);		
	}
	else
	{
		newnode->data=n;
		newnode->next=NULL;
		(*head)->next=newnode;
		(*head)=newnode;
	}
}
void rotate()
{
	int k,i=1;
	struct node *p=temp,*q, *r;
	cout<<"enter the key";
	cin>>k;
	 while(p->next!=NULL)
	 {
	    
	    if(i==k)
	    {
	    	r=p;
		}
		p=p->next;
	    i++;
	 }
	 q=r->next;
	 r->next=NULL;
	 p->next=temp;
	 temp=q;
	 
}
void display()
{
	struct node* p=temp;
	while(p!=NULL)
	{
		cout<<p->data<<" -> ";
		p=p->next;
	}
}

int main()
{
	struct node* head;
	int n,i,a;
	cout<<"enter the number of elements";
	cin>>n;
	cout<<"\nenter the elements";
	for(i=0;i<n;i++)
	{
		cin>>a;
		insert(&head,a);
	}
	cout<<"\ninserted successfuly\n";
	rotate();
	display();
}
