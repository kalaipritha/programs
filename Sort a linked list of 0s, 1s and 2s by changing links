#include <iostream>
#include<malloc.h>
using namespace std;
struct node
{
	int data;
	struct node* next;
};
struct node* temp=NULL;
void insert(struct node** head,int num)
{
	struct node* newnode=(struct node*)malloc(sizeof(struct node));
	if((*head)==NULL)
	{
		newnode->data=num;
		newnode->next=NULL;
		(*head)=newnode;
		temp=(*head);
	}
	else
	{
		newnode->data=num;
		newnode->next=NULL;
		(*head)->next=newnode;
		(*head)=newnode;
	}
}
void display()
{
	struct node* p=temp;
	while(p!=NULL)
	{
		cout<<p->data<<" -> ";
		p=p->next;
	}
}
void segregate()
{
	cout<<"\nhello workd";
	struct node *p=NULL, *q=NULL, *r=NULL,*t=temp;
	insert(&p,-1);
	insert(&q,-1);
	insert(&r,-1);
	struct node* ps=p;
	struct node* qs=q;
	struct node* rs=r;
	cout<<"\nthe starting is!!!!   "<<p->data<<" "<<q->data<<" "<<r->data;	
	cout<<"\n done with here";
	while(t!=NULL)
	{
		if(t->data==0)
		{
			cout<<"\nhii";
			p->next=t;
			p=p->next;
			t=t->next;
		}
		else if(t->data==1)
		{
			cout<<"\nhmmmm";
			q->next=t;
			q=q->next;
			t=t->next;

		}
		else
		{
			cout<<"\nhyyy";
			r->next=t;
			r=r->next;
			t=t->next;
		}
	}
	p->next=qs->next?(qs->next):(rs->next);
	q->next=rs->next;
	r->next=NULL;
	temp=ps->next;
	delete qs;
	delete ps;
	delete rs;
	cout<<"\n";
	cout<<"\ndone";
	display();
}
int main()
{
	struct node* head=NULL;
	int n,i,a;
	cout<<"enter the number of elements";
	cin>>n;
	cout<<"\nenter the elements";
	for(i=0;i<n;i++)
	{
		cin>>a;
		insert(&head,a);
	}
	cout<<"\ninserted successfuly\n";
	display();
	segregate();
	return 0;
}
