#include<stdio.h>
#include<malloc.h>
struct node
{
	int data;
	struct node* l,*r;
};
struct node* root;
int top=-1;
struct node* stack[100];
struct node* newnode(int num)
{
	struct node *n=(struct node*)malloc(sizeof(struct node));
	n->data=num;
	n->l=NULL;
	n->r=NULL;
	return n;
}  
int empty()
{
	if(top==-1)
	return 1;
	else
	return 0;
}
void push(struct node* temp)
{
	top++;
	stack[top]=temp;
}
struct node* pop()
{
	struct node* temp;
	temp=stack[top];
	top--;
	return temp;
}
void inorder_stack(struct node* root)
{
	int i=1;
	if(root==NULL)
		return;
	else
	{
		push(root);
	   while(1)
	   {
	   	 if(top==-1)
	   	 {
	   		 break;
		 }
		 else
		 {
	     	root=pop();
		 	printf("%d ",root->data);
		 	if(root->r!=NULL)
		 	push(root->r);
			if(root->l!=NULL)
			push(root->l);	
	     } 
		}
	}
}
int main()
{
	root=(struct node*)malloc(sizeof(struct node));
	root=newnode(10);
	root->l=newnode(11);
	root->r=newnode(-20);
	root->l->l=newnode(15);
	root->l->r=newnode(12);
	root->r->l=newnode(0);
	root->r->l->l=newnode(16);
	root->r->l->r=newnode(18);
	root->r->r=newnode(9);
	inorder_stack(root);  
}
